version: '3'
services:
  users:
    build:
      context: ./users
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - user_net
      - app_net
    environment:
      DB_NAME: monitor_users
      DB_HOST: users_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      VERSION: 1.0
    depends_on:
      users_db:
        condition: service_healthy
  users_db:
    image: postgres
    environment:
      POSTGRES_DB: monitor_users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - user_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
  routes:
    build:
      context: ./routes
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      DB_NAME: monitor_routes
      DB_HOST: routes_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      USERS_PATH: "http://users:3000"
      VERSION: 1.0
    networks:
      - route_net
      - app_net
    depends_on:
      routes_db:
        condition: service_healthy
  routes_db:
    image: postgres
    environment:
      POSTGRES_DB: monitor_routes
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - route_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
  posts:
    build:
      context: ./posts
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      DB_NAME: monitor_posts
      DB_HOST: posts_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      USERS_PATH: "http://users:3000"
      VERSION: 1.0
    networks:
      - post_net
      - app_net
    depends_on:
      posts_db:
        condition: service_healthy
  posts_db:
    image: postgres
    environment:
      POSTGRES_DB: monitor_posts
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - post_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
  offers:
    build:
      context: ./offers
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    networks:
      - app_net
      - offer_net
    environment:
      DB_NAME: monitor_offers
      DB_HOST: offers_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      ENV:  Development
      USERS_PATH: "http://users:3000"
      VERSION: 1.0
    depends_on:
      offers_db:
        condition: service_healthy
  offers_db:
    image: postgres
    environment:
      POSTGRES_DB: monitor_offers
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - offer_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
  rf003:
    build:
      context: ./RF-003
      dockerfile: Dockerfile
    ports:
      - "3006:3006"
    networks:
      - app_net
      - post_net
      - route_net
    environment:
      ENV:  Development
      POSTS_PATH: "http://posts:3001"

      ROUTES_PATH: "http://routes:3002"
networks:
  user_net:
    driver: bridge
  app_net:
    driver: bridge
  post_net:
    driver: bridge
  offer_net:
    driver: bridge
  route_net:
    driver: bridge
  rf003_net:
    driver: bridge
